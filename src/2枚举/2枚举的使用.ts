// 定义一个枚举

enum Gender2{
    // 左边是逻辑含义,右边是真实值
    male = "男",
    female = "女"
}

let gender2: Gender2

// 这里赋值就不能赋值为真实值了,要使用逻辑含义
gender2 = Gender2.male
gender2 = Gender2.female

// 输出的结果是真实的值

// 好处1
// 这样我要该真实值的话我就只要改一个地方就好了
console.log(gender2)

// 好处2
// 枚举会出现在编译到结果中
// 枚举在编译结果中呈现为对象
// 所以我们可以打印出系统中性别的名称

function printGenders(){
    for (let key in Gender2) {
        console.log(Gender2[key])
    }
}

// 枚举的规则
// 1.枚举的value可以是字符串或者数字
// 2.字段值设置为数字的把他叫做数字枚举,数字枚举的枚举值会依据上一个值进行自增长,如果第一个都不赋值的话第一个值就是0

enum Level {
    level1 = 1,
    level2 = 2,
    level3
}

// 3.被数字枚举约束的变量可以直接赋值为数字,不用赋值为level.level1
let l: Level = 1 // 但这样就会导致我又在使用真实值了,所以不建议

// 4.数字枚举的编译结果和字符串枚举的编译结果不同,要遍历数字枚举的时候要注意一下


// 最佳实践
// 尽量不要在一个枚举中即出现字符串字段又出现数字字段
// 使用枚举的使用尽量使用枚举字段的名称,而别使用真实的值